오늘의 주제: 
      날씨정보와 음성인식 기반 소프트웨어 만들기
  ( 리눅스 운영체제인 우분투 16.04에서 파이썬으로 코딩)
	

프로그래밍 환경: 리눅스 우분투16.04   <---윈도우10 에서는 pyaudio (음성처리) 모듈이 설치가 안됨


학습과정: 
사전지식조사 (10분) (인터넷 조사 및 토론)
과정 1~11:   환경구축, 소프트웨어 개발 환경 설치 (40분) 
과정 12:      음성을 받아서 날씨는 알려주는 기본 코드를 이해하고 테스트 해보기  (10분) (코딩)
과정 13:      파이썬의 제어문(if, for, while) 이해와 활용예 조사(10) (인터넷 조사 및 토론)
과정 14:      음성인식과 날씨 정보 기반으로 나만의 프로그램을 구상하고 코딩하기(30분) (코딩)




///// 사전지식 조사 /////////////////////////////////////////////
---음성처리----
	음성처리 소프트웨어로 사람을 돕는 방법을 생각하기 

	음성처리 원리 조사 

	기존 음성처리 소프트웨어 라이브러리 조사: 
  		1. google assistant 
  		2. 아마존 알렉사
  		3. 기타

	파이썬으로 음성을 텍스트로 변환하는 프로그램 만드는 방법 조사
  		검색 키워드 예: 파이썬으로 음성 텍스트 변환, python speech to text,  python audio to text 
   

---기타----
	리눅스 운영체제란?
	apt-get은 무엇이며, pip3는 무엇일까?

	날씨 정보를 가져오는 pyowm 활용 방법

////////////////////////////////////////////////////////////////////



1. 우분투 운영제체 받기
   https://zetawiki.com/wiki/%EC%9A%B0%EB%B6%84%ED%88%AC_16.04_LTS_%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C
    ->daum 카카오  추천

2. 버추얼 박스 받고 설치
   https://www.virtualbox.org/

3. 윈도우용 버추얼 박스에서 우분투 설치 


//// 리눅스 패키지 관리툴 업데이트//////////////////////////////
4. apt-get update 명령어 이용
    참고 https://blog.outsider.ne.kr/346


//// 파이썬 개발 환경 구축////////////////////////////////////////
5. 파이썬3 설치

6. 파이썬3 IDLE 설치 및 확인

7. 파이썬 pip3설치

///////날씨정보 수집을 위한 pyowm 패키지 설치//////////////
8. pip3 이용, pyowm 설치

   참고자료: https://jinmay.github.io/2018/01/09/python-package-pyowm/
   	     https://github.com/csparpa/pyowm
   


//////음성 텍스트 변환 패키지 설치/////////////////////////////
9. apt-get install 이용, portaudio 컴파일 및 설치  (portaudio 는 파이썬 패키지가 아님, c++로 작성됨) 
  아래의 명령어를 터미널에 입력
            sudo apt-get install libasound-dev portaudio19-dev libportaudio2 libportaudiocpp0
            sudo apt-get install ffmpeg libav-tools

   
10. pip3 이용, pyaudio 파이썬 패키지 설치
    pyaudio란? 

11. pip3 이용, speech_recognition 파이썬 패키지 설치
    speech_recognition? 
     


12. 음성을 받아서 날씨 알려주는 기본 코드를 이해하고 테스트 해보기 
import speech_recognition as sr
from time import sleep
from pyowm import OWM
import pygal                                                       
bar_chart = pygal.Bar()
bar_chart.add('Fibonacci', [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55])  # Add some values
bar_chart.render_to_file('bar_chart.svg') 


r = sr.Recognizer()
mic = sr.Microphone()


API_key = '(your key)'
owm = OWM(API_key)


while True:
    print('어디의 날씨가 궁굼 하세요? ')
    with mic as source:
        audio = r.listen(source)

    talk = r.recognize_google(audio, language = 'en')


    if talk == '감사합니다':
        print('네 알겠습니다.')
    else:
        print(talk,'의 날씨 정보')
        obs = owm.weather_at_place(talk)
        w = obs.get_weather()
        l = obs.get_location()
        temp = w.get_temperature
        rain = w.get_rain()
        print(l.get_name()+':', w.get_status()+',', temp(unit='celsius')['temp'], '˚C')

        if w.get_status() == 'Rain':
            print('현재',  l.get_name()+'은 ' '비가 옵니다. 우산을 챙겨 가세요')
        """print('강수확율:' , rain , '%')
        if rain   > 50:
            print('우산을 챙겨 가세요')
        """
    sleep(1)
    
과정 13:      파이썬의 제어문(if, for, while) 자료 조사 및 토론 
    
과정 14:      음성인식과 날씨 정보 기반으로 나만의 프로그램 만들기
import speech_recognition as sr
from time import sleep
from pyowm import OWM
import pygal                                                       
bar_chart = pygal.Bar()
bar_chart.add('Fibonacci', [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55])  # Add some values
bar_chart.render_to_file('bar_chart.svg') 


r = sr.Recognizer()
mic = sr.Microphone()


API_key = '나의 키번호'
owm = OWM(API_key)


while True:
    print('어디의 날씨가 궁굼 하세요? ')
    with mic as source:
        audio = r.listen(source)

    talk = r.recognize_google(audio, language = 'en')


    if talk == '감사합니다':
        print('네 알겠습니다.')
 
""" 
아래에 알고리즘을 추가해 보세요^^ 
"""


    sleep(1)
    





   
